---
import Logo from "./Logo.astro";
---

<header
  id="landing-header"
  class="fixed top-0 z-40 flex items-center justify-between w-full px-10 py-3 text-white"
>
  <div class="flex flex-grow basis-0">
    <a href="./"><Logo /></a>
  </div>

  <nav class="hidden xl:block sm:hidden">
    <ul
      class="flex text-sm [&>li>a]:transition-colors [&>li>a]:duration-500 [&>li>a]:text-current [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2"
    >
      <li><a href="#exterior">Servicio Exterior</a></li>
      <li><a href="#interior">Servicio Interior</a></li>
      <li><a href="#completo">Servicio Completo</a></li>
      <li><a href="#agenda">Agenda Tu Servicio</a></li>
    </ul>
  </nav>

  <nav class="flex justify-end flex-grow basis-0">
    <ul
      class="flex text-sm [&>li>a]:transition-colors [&>li>a]:duration-500 [&>li>a]:text-current [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-4 [&>li>a]:py-2"
    >
      <li class="hidden xl:block sm:hidden"><a href="#galeria">Galeria</a></li>
      <li class="hidden xl:block sm:hidden"><a href="#resenas">Reseñas</a></li>
      <li><a id="menu-btn" href="#">Menu</a></li>
    </ul>
  </nav>

  <nav
    id="modal-menu"
    class="fixed top-0 bottom-0 left-0 right-0 flex flex-col bg-white xl:hidden"
  >
    <button id="close-btn" class="flex justify-end w-screen p-5">
      <img
        class="h-6 text-black"
        src="../public/close-icon.svg"
        alt="close image"
      />
    </button>
    <ul
      class="flex flex-col mt-4 [&>li>a]:font-size: 20px [&>li>a]:transition-colors [&>li]:m-3 [&>li>a]:justify-between [&>li>a]:duration-200 [&>li>a]:text-black [&>li>a]:font-medium [&>li>a]:inline-block [&>li>a]:px-6 [&>li>a]:py-3 [&>li>a]:rounded-md [&>li>a]:w-full"
    >
      <li>
        <a class="hover:bg-slate-100" href="#home">
          Inicio <img
            class="h-5"
            alt="arrow icon"
            src="../public/arrow-icon.svg"
          /></a
        >
      </li>
      <li>
        <a class="hover:bg-slate-100" href="#exterior"
          >Servicio Exterior<img
            class="h-5"
            alt="arrow icon"
            src="../public/arrow-icon.svg"
          /></a
        >
      </li>
      <li>
        <a class="hover:bg-slate-100" href="#interior"
          >Servicio Interior<img
            class="h-5"
            alt="arrow icon"
            src="../public/arrow-icon.svg"
          /></a
        >
      </li>
      <li>
        <a class="hover:bg-slate-100" href="#completo"
          >Servicio Completo<img
            class="h-5"
            alt="arrow icon"
            src="../public/arrow-icon.svg"
          /></a
        >
      </li>
      <li>
        <a class="hover:bg-slate-100" href="#agenda"
          >Agenda<img class="h-5" alt="arrow icon" src="/arrow-icon.svg" /></a
        >
      </li>
      <li>
        <a class="hover:bg-slate-100" href="#galeria"
          >Galeria<img class="h-5" alt="arrow icon" src="/arrow-icon.svg" /></a
        >
      </li>
      <li>
        <a class="hover:bg-slate-100" href="#resenas"
          >Reseñas<img class="h-5" alt="arrow icon" src="/arrow-icon.svg" /></a
        >
      </li>
    </ul>
  </nav>

  <script>
    const menuBtn = document.getElementById("menu-btn");
    const modalMenu = document.querySelector("#modal-menu") as HTMLElement;
    const closeBtn = document.querySelector("#close-btn") as HTMLElement;

    function toggleDropdownMenu() {
      // Aquí estamos alternando el valor del display para mostrar/ocultar el menú
      modalMenu.style.display =
        modalMenu.style.display === "flex" ? "none" : "flex";
    }

    if (menuBtn) {
      menuBtn.addEventListener("click", toggleDropdownMenu);
    }

    if (closeBtn) {
      closeBtn.addEventListener("click", toggleDropdownMenu);
    }
  </script>

  <script>
    const listItem = document.querySelectorAll("#landing-header li");

    listItem.forEach((item) => {
      item.addEventListener("mouseenter", () => {
        const { left, top, width, height } = (
          item as HTMLElement
        ).getBoundingClientRect();

        (item as HTMLElement).style.backgroundColor = "rgba(0, 0, 0, 0.1)";
      });

      item.addEventListener("mouseleave", () => {
        (item as HTMLElement).style.backgroundColor = "transparent";
      });
    });
  </script>

  <script>
    const headerEl = document.querySelector("#landing-header");

    const observerOptions = {
      root: null,
      rootMargin: "0px", // en cuanto se vea el elemento
      threshold: 0.9, // porcentaje de visibilidad
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        const { isIntersecting } = entry;
        if (isIntersecting) {
          const color = entry.target.getAttribute("data-header-color");
          if (color) {
            (headerEl as HTMLElement).style.color = color;
          }
        }
      });
    }, observerOptions);

    const sectionElements = document.querySelectorAll(".landing-section");
    sectionElements.forEach((section) => observer.observe(section));
  </script>
</header>
